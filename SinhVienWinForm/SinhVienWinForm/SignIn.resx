<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>